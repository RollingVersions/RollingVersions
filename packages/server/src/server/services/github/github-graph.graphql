query GetRepository($owner: String!, $name: String!) {
  repository(owner: $owner, name: $name) {
    databaseId
    id
    isPrivate
    defaultBranchRef {
      name
    }
  }
}

query GetRepositoryPullRequests(
  $owner: String!
  $name: String!
  $after: String
) {
  repository(owner: $owner, name: $name) {
    id
    pullRequests(first: 100, after: $after, states: [CLOSED, MERGED, OPEN]) {
      pageInfo {
        hasNextPage
        endCursor
      }
      nodes {
        id
        databaseId
        baseRepository {
          id
        }
      }
    }
  }
}

query GetPullRequestFromGraphID($id: ID!) {
  node(id: $id) {
    __typename
    ... on PullRequest {
      databaseId
      number
      title
      merged
      closed
      mergeCommit {
        oid
      }
      headRefName
      baseRefName
    }
  }
}

query GetPullRequestFromNumber($owner: String!, $name: String!, $number: Int!) {
  repository(owner: $owner, name: $name) {
    pullRequest(number: $number) {
      id
      databaseId
      number
      title
      merged
      closed
      mergeCommit {
        oid
      }
      headRefName
      baseRefName
    }
  }
}

query GetPullRequestStatus($owner: String!, $name: String!, $number: Int!) {
  repository(owner: $owner, name: $name) {
    pullRequest(number: $number) {
      closed
      merged
    }
  }
}

query GetPullRequestAuthor($owner: String!, $name: String!, $number: Int!) {
  repository(owner: $owner, name: $name) {
    pullRequest(number: $number) {
      author {
        __typename
        login
      }
    }
  }
}

query GetViewer {
  viewer {
    __typename
    login
  }
}

query GetRepositoryViewerPermissions($owner: String!, $name: String!) {
  repository(owner: $owner, name: $name) {
    viewerPermission
  }
}

query GetRepositoryIsPrivate($owner: String!, $name: String!) {
  repository(owner: $owner, name: $name) {
    isPrivate
  }
}

query GetRelease($owner: String!, $name: String!, $tagName: String!) {
  repository(owner: $owner, name: $name) {
    release(tagName: $tagName) {
      createdAt
      name
      description
      # descriptionHTML
    }
  }
}
